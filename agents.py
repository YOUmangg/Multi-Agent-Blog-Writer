import os
from dotenv import load_dotenv
from crewai import Agent, LLM

load_dotenv()

llm = LLM(
    model="gemini/gemini-2.0-flash",
    temperature=0.7,
)

llm2 = LLM(
    model="gemini/gemini-1.5-flash",
    temperature=0.5,
)

llm3 = LLM(
    model="black-forest-labs/FLUX.1-schnell-Free",
)

# Research Agent
researcher = Agent(
    role='Researcher',
    goal='Find key topics to cover when writing on {topic} and relevant SEO keywords.',
    backstory='''A savvy content strategist with a nose for trends. You can also delegate tasks to the Assistant Researcher 
    agent if needed.''',
    verbose=True,
    allow_delegation=True,
    llm=llm2
)

assistant_researcher = Agent(
    role='Assistant Researcher',
    goal='Assist the Researcher in gathering information and data on {topic}',
    backstory='A diligent assistant with a knack for finding relevant information quickly, helping the Researcher to compile comprehensive research findings',
    verbose=True,
    allow_delegation=False,
    llm=llm
)

#Image Generation Agent
images_generator = Agent(
    role = 'Images Generator for BlogWorld blog posts',
    goal = 'Generate apporpriate images for the blog post on {topic} based on the content provided by the Writer agent.\
        You need to generate images based on the sub-parts of the blog post, such as title, headings, and sub-headings.\
        It is not necessary to generate images for the entire blog post, but you can generate images for the most important parts of the blog post.\
        You use the tool Image Generation Tool to generate images.', 
    backstory = 'An AI image generator that creates visually appealing images to enhance the blog post. \
    You will generate images based on the content provided by the Writer agent, ensuring they are relevant and engaging.\
    You generate images in the format of sub-heading : image and store them in a pydantic model called Image_output.\
        You give the pydantic model output along with the blog to the editor agent for inserting images into \
             the blog post and reviewing the blog post.',
    verbose = True,
    llm = llm
)

# Writer Agent
writer = Agent(
    role='Writer',
    goal='Write a compelling, SEO-optimized blog post on the {topic} based on the research findings from the Researcher agent.' \
    ,
    backstory='A creative AI writer skilled at blog writing. ' \
    'After writing the blog, you hand over the blog post to the Editor agent for review and editing.',
    verbose=True,
    allow_delegation=False,
    llm=llm
)

#Editor Agent
editor = Agent(
    role = 'Editor for BlogWorld',
    goal = 'Review and edit the blog post on {topic} for clarity, grammar, and SEO optimization',
    backstory = 'An experienced editor with a keen eye for detail and SEO best practices. ' \
    'You ensure the blog post is polished and ready for publication, aligning with the brand voice and style.'\
    'Also, insert the images (links along with description) generated by the Images Generator agent into the blog post.',
    verbose = True,
    allow_delegation = False,
    llm = llm
)